# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества.
# m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

# n, m = map(int, input("введите длину каждого множества, два числа через пробел: ").split())
#
# a = set(map(int, input("введите числа первого множества через пробел: ").split()))
#
# b = set(map(int, input("введите числа второго множества через пробел: ").split()))
#
# print(*sorted(a & b))

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке,
# причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних.
# Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное
# число ягод— на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом,
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать
# один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

# n = int(input("введите количество кустов на грядке: "))
# plant = []
# for _ in range(n):
#      plant.append(int(input("введите количество ягод на кусту: ")))
# print(*plant)
# sort = plant + plant[:2]
# print(*sort)
# best = 0
# for i in range(n):
#     best = max( best, sort[i] + sort[i+1] + sort[i+2] )
# print(best)

# Доп. задача:
# Пользователь вводит текст(строка). Словом считается последовательность непробельных символов идущих подряд,
# слова разделены одним или большим числом пробелов или символами конца строки.Определите, сколько различных
# слов содержится в этом тексте. НЕЛЬЗЯ ИСПОЛЬЗОВАТЬ МЕТОД SPLIT

s = input("напишите предложение: ")
i = 0
while s[i] == ' ':
    s = s[1:]
while s[len(s)-1] == ' ':
    s = s[:-1]
i = 1
while i < len(s)-1:
    if s[i] == ' ' and s[i+1] == ' ':
        s = s[:i+1] + s[i+2:]
    else:
        i += 1
print(s)
word_qty = s.count(" ") + 1
print("количество слов в строке: ", word_qty)